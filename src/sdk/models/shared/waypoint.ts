/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Chart } from "./chart";
import { WaypointFaction } from "./waypointfaction";
import { WaypointOrbital } from "./waypointorbital";
import { WaypointTrait } from "./waypointtrait";
import { WaypointType } from "./waypointtype";
import { Expose, Type } from "class-transformer";

/**
 * A waypoint is a location that ships can travel to such as a Planet, Moon or Space Station.
 */
export class Waypoint extends SpeakeasyBase {
    /**
     * The chart of a system or waypoint, which makes the location visible to other agents.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "chart" })
    @Type(() => Chart)
    chart?: Chart;

    @SpeakeasyMetadata()
    @Expose({ name: "faction" })
    @Type(() => WaypointFaction)
    faction?: WaypointFaction;

    @SpeakeasyMetadata({ elemType: WaypointOrbital })
    @Expose({ name: "orbitals" })
    @Type(() => WaypointOrbital)
    orbitals: WaypointOrbital[];

    @SpeakeasyMetadata()
    @Expose({ name: "symbol" })
    symbol: string;

    @SpeakeasyMetadata()
    @Expose({ name: "systemSymbol" })
    systemSymbol: string;

    /**
     * The traits of the waypoint.
     */
    @SpeakeasyMetadata({ elemType: WaypointTrait })
    @Expose({ name: "traits" })
    @Type(() => WaypointTrait)
    traits: WaypointTrait[];

    /**
     * The type of waypoint.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: WaypointType;

    @SpeakeasyMetadata()
    @Expose({ name: "x" })
    x: number;

    @SpeakeasyMetadata()
    @Expose({ name: "y" })
    y: number;
}
