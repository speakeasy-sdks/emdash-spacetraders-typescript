/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContractDeliverGood } from "./contractdelivergood";
import { ContractPayment } from "./contractpayment";
import { Expose, Transform, Type } from "class-transformer";

export class ContractTerms extends SpeakeasyBase {
    /**
     * The deadline for the contract.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deadline" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deadline: Date;

    @SpeakeasyMetadata({ elemType: ContractDeliverGood })
    @Expose({ name: "deliver" })
    @Type(() => ContractDeliverGood)
    deliver?: ContractDeliverGood[];

    @SpeakeasyMetadata()
    @Expose({ name: "payment" })
    @Type(() => ContractPayment)
    payment: ContractPayment;
}
