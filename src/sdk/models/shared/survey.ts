/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SurveyDeposit } from "./surveydeposit";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted.
 */
export enum SurveySize {
    Small = "SMALL",
    Moderate = "MODERATE",
    Large = "LARGE",
}

/**
 * A resource survey of a waypoint, detailing a specific extraction location and the types of resources that can be found there.
 */
export class Survey extends SpeakeasyBase {
    /**
     * A list of deposits that can be found at this location.
     */
    @SpeakeasyMetadata({ elemType: SurveyDeposit })
    @Expose({ name: "deposits" })
    @Type(() => SurveyDeposit)
    deposits: SurveyDeposit[];

    /**
     * The date and time when the survey expires. After this date and time, the survey will no longer be available for extraction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expiration" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    expiration: Date;

    /**
     * A unique signature for the location of this survey. This signature is verified when attempting an extraction using this survey.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "signature" })
    signature: string;

    /**
     * The size of the deposit. This value indicates how much can be extracted from the survey before it is exhausted.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "size" })
    size: SurveySize;

    /**
     * The symbol of the waypoint that this survey is for.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "symbol" })
    symbol: string;
}
