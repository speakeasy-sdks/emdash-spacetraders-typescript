/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MarketTradeGood } from "./markettradegood";
import { MarketTransaction } from "./markettransaction";
import { TradeGood } from "./tradegood";
import { Expose, Type } from "class-transformer";

export class Market extends SpeakeasyBase {
    /**
     * The list of goods that are bought and sold between agents at this market.
     */
    @SpeakeasyMetadata({ elemType: TradeGood })
    @Expose({ name: "exchange" })
    @Type(() => TradeGood)
    exchange: TradeGood[];

    /**
     * The list of goods that are exported from this market.
     */
    @SpeakeasyMetadata({ elemType: TradeGood })
    @Expose({ name: "exports" })
    @Type(() => TradeGood)
    exports: TradeGood[];

    /**
     * The list of goods that are sought as imports in this market.
     */
    @SpeakeasyMetadata({ elemType: TradeGood })
    @Expose({ name: "imports" })
    @Type(() => TradeGood)
    imports: TradeGood[];

    /**
     * The symbol of the market. The symbol is the same as the waypoint where the market is located.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "symbol" })
    symbol: string;

    /**
     * The list of goods that are traded at this market. Visible only when a ship is present at the market.
     */
    @SpeakeasyMetadata({ elemType: MarketTradeGood })
    @Expose({ name: "tradeGoods" })
    @Type(() => MarketTradeGood)
    tradeGoods?: MarketTradeGood[];

    /**
     * The list of recent transactions at this market. Visible only when a ship is present at the market.
     */
    @SpeakeasyMetadata({ elemType: MarketTransaction })
    @Expose({ name: "transactions" })
    @Type(() => MarketTransaction)
    transactions?: MarketTransaction[];
}
