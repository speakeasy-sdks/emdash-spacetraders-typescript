/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The type of transaction.
 */
export enum MarketTransactionType {
    Purchase = "PURCHASE",
    Sell = "SELL",
}

export class MarketTransaction extends SpeakeasyBase {
    /**
     * The price per unit of the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pricePerUnit" })
    pricePerUnit: number;

    /**
     * The symbol of the ship that made the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipSymbol" })
    shipSymbol: string;

    /**
     * The timestamp of the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timestamp" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    timestamp: Date;

    /**
     * The total price of the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "totalPrice" })
    totalPrice: number;

    /**
     * The symbol of the trade good.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tradeSymbol" })
    tradeSymbol: string;

    /**
     * The type of transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: MarketTransactionType;

    /**
     * The number of units of the transaction.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "units" })
    units: number;

    /**
     * The symbol of the waypoint where the transaction took place.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "waypointSymbol" })
    waypointSymbol: string;
}
