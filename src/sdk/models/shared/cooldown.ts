/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A cooldown is a period of time in which a ship cannot perform certain actions.
 */
export class Cooldown extends SpeakeasyBase {
    /**
     * The date and time when the cooldown expires in ISO 8601 format
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expiration" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    expiration?: Date;

    /**
     * The remaining duration of the cooldown in seconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remainingSeconds" })
    remainingSeconds: number;

    /**
     * The symbol of the ship that is on cooldown
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipSymbol" })
    shipSymbol: string;

    /**
     * The total duration of the cooldown in seconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "totalSeconds" })
    totalSeconds: number;
}
