/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class JettisonSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    agentToken: string;
}

export class JettisonRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "symbol" })
    symbol: string;

    @SpeakeasyMetadata()
    @Expose({ name: "units" })
    units: number;
}

export class JettisonRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: JettisonRequestBody;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=shipSymbol" })
    shipSymbol: string;
}

export class Jettison200ApplicationJSONData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "cargo" })
    @Type(() => shared.ShipCargo)
    cargo: shared.ShipCargo;
}

/**
 * OK
 */
export class Jettison200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => Jettison200ApplicationJSONData)
    data: Jettison200ApplicationJSONData;
}

export class JettisonResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    jettison200ApplicationJSONObject?: Jettison200ApplicationJSON;
}
