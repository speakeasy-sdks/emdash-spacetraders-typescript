/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TransferCargoSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    agentToken: string;
}

export class TransferCargoTransferCargoRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "shipSymbol" })
    shipSymbol: string;

    @SpeakeasyMetadata()
    @Expose({ name: "tradeSymbol" })
    tradeSymbol: string;

    @SpeakeasyMetadata()
    @Expose({ name: "units" })
    units: number;
}

export class TransferCargoRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: TransferCargoTransferCargoRequest;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=shipSymbol" })
    shipSymbol: string;
}

export class TransferCargoTransferCargo200ResponseData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "cargo" })
    @Type(() => shared.ShipCargo)
    cargo: shared.ShipCargo;
}

/**
 * Created
 */
export class TransferCargoTransferCargo200Response extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => TransferCargoTransferCargo200ResponseData)
    data: TransferCargoTransferCargo200ResponseData;
}

export class TransferCargoResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Created
     */
    @SpeakeasyMetadata()
    transferCargo200Response?: TransferCargoTransferCargo200Response;
}
