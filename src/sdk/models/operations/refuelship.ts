/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class RefuelShipSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    agentToken: string;
}

export class RefuelShipRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=shipSymbol" })
    shipSymbol: string;
}

export class RefuelShip200ApplicationJSONData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "agent" })
    @Type(() => shared.Agent)
    agent: shared.Agent;

    /**
     * Details of the ship's fuel tanks including how much fuel was consumed during the last transit or action.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fuel" })
    @Type(() => shared.ShipFuel)
    fuel: shared.ShipFuel;

    @SpeakeasyMetadata()
    @Expose({ name: "transaction" })
    @Type(() => shared.MarketTransaction)
    transaction: shared.MarketTransaction;
}

/**
 * OK
 */
export class RefuelShip200ApplicationJSON extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => RefuelShip200ApplicationJSONData)
    data: RefuelShip200ApplicationJSONData;
}

export class RefuelShipResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    refuelShip200ApplicationJSONObject?: RefuelShip200ApplicationJSON;
}
