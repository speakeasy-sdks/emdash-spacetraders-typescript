/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class NegotiateContractSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
    })
    agentToken: string;
}

export class NegotiateContractRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: any;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=shipSymbol" })
    shipSymbol: string;
}

export class NegotiateContractNegotiateContract200ResponseData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "contract" })
    @Type(() => shared.Contract)
    contract: shared.Contract;
}

/**
 * Created
 */
export class NegotiateContractNegotiateContract200Response extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => NegotiateContractNegotiateContract200ResponseData)
    data: NegotiateContractNegotiateContract200ResponseData;
}

export class NegotiateContractResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Created
     */
    @SpeakeasyMetadata()
    negotiateContract200Response?: NegotiateContractNegotiateContract200Response;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
